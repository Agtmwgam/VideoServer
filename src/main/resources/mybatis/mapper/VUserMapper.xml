<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tw.dao.VUserDao">


	<!-- 新建一个用户 -->
	<insert id="creatUser" parameterType="com.tw.entity.VUser" useGeneratedKeys="true" keyProperty="userID">
		insert into vUser
		(phoneNumber, nickName, password)
		values(#{phoneNumber}, #{nickName}, #{password})
	</insert>

	<!-- 根据传入的信息查找对应的用户信息 -->
	<select id="queryUser" parameterType="com.tw.entity.VUser"
			resultType="com.tw.entity.VUser">
		select * from vUser
		<where>
			<if test="userID !=null and userID!=''">
				userID =#{userID}
			</if>
			<if test="nickName!=null and nickName!=''">
				and nickName=#{nickName}
			</if>
			<if test="phoneNumber !=null and phoneNumber !=''">
				and phoneNumber =#{phoneNumber}
			</if>
			<if test="password !=null and password !=''">
				and password =#{password}
			</if>
			<if test="createTime!=null and createTime!=''">
				and createTime=#{createTime}
			</if>
			<if test="isValid!=null and isValid!=''">
				and isValid=#{isValid}
			</if>
			and isValid='1'
		</where>
	</select>

	<!-- 根据条件查询user分页 -->
	<select id="fuzzyQueryUserByPage" parameterType="java.util.Map" resultType="com.tw.entity.VUser">
		select * from vUser
		<where>
			<if test="phoneNumber !=null and phoneNumber !=''">
				phoneNumber LIKE '%${phoneNumber}%'
			</if>
			<if test="userID !=null and userID!=''">
				userID =#{userID}
			</if>
			<if test="nickName!=null and nickName!=''">
				and nickName=#{nickName}
			</if>
			and isValid='1'
		</where>
		ORDER BY
		createTime
		DESC
		LIMIT
		#{start}, #{pageSize}
	</select>


	<!-- 根据传入的信息查找对应的用户信息 -->
	<select id="fuzzyQueryUser" parameterType="com.tw.entity.VUser"
			resultType="com.tw.entity.VUser">
		select * from vUser
		<where>
			<if test="phoneNumber !=null and phoneNumber !=''">
				phoneNumber LIKE '%${phoneNumber}%'
			</if>
			and isValid='1'
		</where>
	</select>

	<!-- 更新客户信息 -->
	<update id="modifyUser" parameterType="com.tw.entity.VUser">
		update vUser
		<set>
			<if test="nickName != null and nickName !=''">
				nickName = #{nickName},
			</if>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
		</set>
		<where>
			<if test="phoneNumber !=null and phoneNumber!=''">
				phoneNumber = #{phoneNumber}
			</if>
		</where>
	</update>

	<!-- 逻辑删除用户 -->
	<update id="delUser" parameterType="com.tw.entity.VUser">
		update vUser
		<set>
			<if test="isValid !=null and isValid!=''">
				isValid = #{isValid}
			</if>
		</set>
		<where>
			<if test="userID !=null and id!=''">
				userID =#{userID}
			</if>
			<if test="phoneNumber !=null and phoneNumber!=''">
				AND phoneNumber = #{phoneNumber}
			</if>
			<if test="nickName != null and nickName !=''">
				AND nickName = #{nickName}
			</if>
			<if test="password != null and password != ''">
				AND password = #{password}
			</if>
		</where>
	</update>


	<!-- 拿到条件内容的总数 -->
	<select id="getTotleOfUserAndDevice" parameterType="java.util.Map" resultType="int">
		select
			count(*)
		from
			vUser
		<where>
			isValid='1'
			<if test="phoneNumber !=null and phoneNumber !=''">
				and phoneNumber LIKE '%${phoneNumber}%'
			</if>
			<if test="userID !=null and userID!=''">
				and userID =#{userID}
			</if>
			<if test="nickName!=null and nickName!=''">
				and nickName=#{nickName}
			</if>
		</where>
	</select>


<!--	&lt;!&ndash; 根据用户id获得设备列表 &ndash;&gt;-->
<!--	<select id="getDeviceByUserId" parameterType="int" resultType="com.tw.entity.Device">-->
<!--		SELECT-->
<!--			a.*-->
<!--		FROM device a-->
<!--		INNER JOIN-->
<!--			userDeviceRelate b-->
<!--		ON-->
<!--		 	b.deviceId = a.deviceId-->
<!--		WHERE-->
<!--			a.isValid = '1'-->
<!--			AND b.isValid = '1'-->
<!--			AND b.userId =#{userId}-->
<!--	</select>-->

	<!-- 根据用户id获得设备列表 -->
	<select id="getDeviceByUserId" parameterType="int" resultType="com.tw.entity.Device">
		SELECT
			a.*
		FROM
			device a
		INNER JOIN
			deviceGroupRelate b
		ON
			b.deviceId = a.deviceId
		INNER JOIN
			deviceGroup c
		ON
			c.deviceGroupId = b.deviceGroupId
		INNER JOIN
			userDeviceGroupRelate d
		ON
			d.deviceGroupId = c.deviceGroupId
		INNER JOIN
			vUser e
		ON
			e.userID = d.userId
		WHERE
			a.isValid = '1'
		AND
			b.isValid = '1'
		AND
			c.isValid = '1'
		AND
			d.isValid = '1'
		AND
			e.isValid = '1'
		AND
			e.userID = #{userId}
	</select>
</mapper>